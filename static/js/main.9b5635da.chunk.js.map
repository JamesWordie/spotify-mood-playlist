{"version":3,"sources":["components/searchForm.jsx","api/spotifyAuth.jsx","api/spotifySearch.jsx","api/spotifySongData.jsx","api/spotifyCreate.jsx","actions/index.jsx","containers/searchBar.jsx","containers/spotifyLogin.jsx","components/navbar.jsx","components/banner.jsx","components/songCard.jsx","containers/songsGrid.jsx","containers/songData.jsx","containers/selectedSong.jsx","components/app.jsx","reducers/authReducer.jsx","reducers/searchReducer.jsx","reducers/selectedSongReducer.jsx","reducers/createPlaylistReducer.jsx","reducers/index.jsx","index.jsx"],"names":["SearchForm","props","renderInput","input","meta","label","className","placeholder","renderError","error","touched","role","initialValues","onSubmit","formValues","validate","errors","search","render","handleSubmit","name","component","axios","create","baseURL","params","type","limit","SIGN_IN","SIGN_OUT","GET_DATA","SEARCH","SEARCH_TERM","SELECTED_SONG","CREATE_PLAYLIST","FETCH_ANALYSIS","getUserData","spotifyToken","dispatch","a","spotifyAuth","get","headers","response","spotifyData","id","data","profileURL","external_urls","spotify","username","display_name","payload","SearchBar","spotifySearchTerm","searchTerm","this","icon","faInfo","React","Component","connect","getState","auth","spotifySearch","tracks","items","trackInfo","map","track","title","previewURL","preview_url","artist","album","artists","image","images","url","albumTitle","uri","window","location","hash","substring","split","reduce","sum","current","block","decodeURIComponent","SpotifyLogin","onSignInClick","logIn","onSignOutClick","signOut","access_token","signIn","origin","redirectURI","scopes","join","request","process","open","isSignedIn","onClick","faSpotify","style","marginRight","userData","faUser","fontSize","lineHeight","renderProfile","renderAuthButton","state","Navbar","faHeadphones","Banner","SongCard","song","src","alt","faPlayCircle","SongsGrid","selectedSong","songs","renderSongs","SongData","fetchAnalysis","songData","Object","keys","index","scope","toFixed","renderData","labels","datasets","acousticness","danceability","energy","liveness","speechiness","valence","backgroundColor","borderColor","borderWidth","options","scale","ticks","beginAtZero","renderGraph","renderDataTable","selectedSongInfo","song_id","spotifySongData","instrumentalness","tempo","SelectedSong","iframeClass","frameBorder","width","height","allowtransparency","allow","App","length","INITIAL_STATE","authReducer","action","searchReducer","selectedSongReducer","playListInfo","createPlaylistReducer","combineReducers","createPlaylist","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9b5635da.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form, Field } from \"react-final-form\";\n\nconst SearchForm = (props) => {\n  const renderInput = ({ input, meta, label }) => {\n    return (\n      <div className=\"search-bar\">\n        <input placeholder={label} className=\"form-control\" {...input} />\n        {renderError(meta)}\n      </div>\n    )\n  }\n\n  const renderError = ({ error, touched }) => {\n    if (touched && error) {\n      return (\n        <div className=\"alert alert-danger mt-2\" role=\"alert\">\n          <p className=\"text-muted my-0\">{error}</p>\n        </div>\n      )\n    }\n  }\n\n  const onSubmit = (formValues) => {\n    props.onSubmit(formValues);\n  }\n\n  const validate = (formValues) => {\n    let errors = {};\n\n    if(!formValues.search) {\n      errors.search = 'You need to make a search.'\n    }\n\n    return errors;\n  }\n\n  return (\n    <Form\n      initialValues={props.initialValues}\n      onSubmit={onSubmit}\n      validate={validate}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <Field\n            name=\"search\"\n            component={renderInput}\n            label=\"Enter a search term...\"\n          />\n        </form>\n      )}\n    />\n  )\n}\n\nexport default SearchForm;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: \"https://api.spotify.com/v1/me\"\n});\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: \"https://api.spotify.com/v1/search\",\n  params: {\n    type: 'track',\n    limit: '10'\n  }\n});\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: \"https://api.spotify.com/v1/audio-features\"\n});\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: \"https://api.spotify.com/v1/users/\"\n});\n","import spotifyAuth from '../api/spotifyAuth';\nimport spotifySearch from '../api/spotifySearch';\nimport spotifyCreate from '../api/spotifyCreate';\nimport spotifySongData from '../api/spotifySongData';\n\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const GET_DATA = 'GET_DATA';\nexport const SEARCH = \"SEARCH\";\nexport const SEARCH_TERM = \"SEARCH_TERM\";\nexport const SELECTED_SONG = \"SELECTED_SONG\";\nexport const CREATE_PLAYLIST = \"CREATE_PLAYLIST\";\nexport const FETCH_ANALYSIS = \"FETCH_ANALYSIS\";\n\nexport const signIn = (spotifyToken) => async dispatch => {\n  await dispatch(getUserData(spotifyToken));\n\n  dispatch({\n    type: SIGN_IN,\n    payload: spotifyToken\n  });\n}\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n}\n\nexport const getUserData = (spotifyToken) => async dispatch => {\n  const response = await spotifyAuth.get(\"\", {\n    headers: {\n      \"Authorization\": \"Bearer \" + spotifyToken\n    }\n  })\n\n  const spotifyData = {\n    id: response.data.id,\n    profileURL: response.data.external_urls.spotify,\n    username: response.data.display_name\n  };\n\n  dispatch({ type: GET_DATA, payload: spotifyData })\n}\n\nexport const searchTerm = formValues => {\n  return {\n    type: SEARCH_TERM,\n    payload: formValues\n  }\n}\n\nexport const spotifySearchTerm = formValues => async (dispatch, getState) => {\n  const { spotifyToken } = getState().auth;\n  const response = await spotifySearch.get(`?q=${formValues.search}`, {\n    headers: {\n      \"Authorization\": \"Bearer \" + spotifyToken\n    }\n  });\n\n  const tracks = response.data.tracks.items;\n  const trackInfo = tracks.map((track) => {\n    return {\n      title: track.name,\n      id: track.id,\n      previewURL: track.preview_url,\n      artist: track.album.artists[0].name,\n      image: track.album.images[1].url,\n      url: track.external_urls.spotify,\n      albumTitle: track.album.name,\n      uri: track.uri\n    }\n  });\n\n  dispatch({ type: SEARCH, payload: trackInfo })\n}\n\nexport const selectedSong = (song) => {\n  return {\n    type: SELECTED_SONG,\n    payload: song\n  }\n}\n\nexport const createPlaylist = () => async (dispatch, getState) => {\n  const { spotifyToken } = getState().auth;\n  const { id } = getState().auth.userData;\n  const { search } = getState().search.searchTerm;\n  const description = \"A playlist created by TuneSense\";\n\n  const body = {\n    \"name\": `${search} songs`,\n    \"description\": description,\n    \"public\": true\n  };\n\n  try {\n    const response = await spotifyCreate.post(`${id}/playlists`, body, {\n      headers: {\n        \"Authorization\": \"Bearer \" + spotifyToken,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(response);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchAnalysis = (song_id) => async (dispatch, getState) => {\n  const { spotifyToken } = getState().auth;\n\n  const response = await spotifySongData.get(`/${song_id}`, {\n    headers: {\n      \"Authorization\": \"Bearer \" + spotifyToken\n    }\n  });\n\n  const data = {\n    acousticness: response.data.acousticness,\n    danceability: response.data.danceability,\n    energy: response.data.energy,\n    instrumentalness: response.data.instrumentalness,\n    liveness: response.data.liveness,\n    speechiness: response.data.speechiness,\n    tempo: response.data.tempo,\n    valence: response.data.valence\n  };\n\n  dispatch({ type: FETCH_ANALYSIS, payload: data });\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfo } from '@fortawesome/free-solid-svg-icons';\n\nimport SearchForm from '../components/searchForm';\nimport { spotifySearchTerm, searchTerm } from '../actions';\n\nclass SearchBar extends React.Component {\n  onSubmit = formValues => {\n    this.props.spotifySearchTerm(formValues);\n    this.props.searchTerm(formValues);\n  }\n\n  render() {\n    return (\n      <div className=\"row justify-content-center mt-3\">\n        <div className=\"col-12 col-sm-6\">\n          <SearchForm onSubmit={this.onSubmit} />\n          <span className=\"info w-100 mt-2\">\n            <FontAwesomeIcon icon={faInfo} />\n            <p className=\"text-light text-center m-0\">Search for a song based on your mood to generate a playlist</p>\n          </span>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default connect(null, { spotifySearchTerm, searchTerm })(SearchBar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpotify } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst response = window.location.hash\n.substring(1)\n.split('&')\n.reduce((sum, current) => {\n  if (current) {\n    const block = current.split(\"=\")\n    sum[block[0]] = decodeURIComponent(block[1])\n  }\n  return sum\n}, {});\n\nclass SpotifyLogin extends React.Component {\n  // after component mounts, check the url for the token and parses it to obtain the access token from spotify to be used later\n  componentDidMount() {\n    const spotifyToken = response.access_token;\n    if (spotifyToken) {\n      this.props.signIn(spotifyToken);\n    }\n  }\n\n  // function that connects to spotify oauth, accessing via window.load\n  logIn() {\n    const baseURL = \"https://accounts.spotify.com/authorize\";\n    const clientId = process.env.REACT_APP_CLIENT_ID;\n    const origin = window.location.origin;\n    const redirectURI = origin === \"http://localhost:3000\" ? origin : \"https://jameswordie.github.io/spotify-mood-playlist/\";\n    const scopes = [\"user-read-private\", \"playlist-modify-private\", \"user-read-email\", \"streaming\", \"user-read-currently-playing\", \"playlist-modify-public\"].join(\"%20\")\n    const params = \"response_type=token&show_dialog=true\";\n    const request = `${baseURL}?client_id=${clientId}&redirect_uri=${redirectURI}&scopes=${scopes}&${params}`;\n    window.open(request, \"_self\");\n  }\n\n  onSignInClick = () => {\n    this.logIn();\n  }\n\n  onSignOutClick = () => {\n    this.props.signOut();\n  }\n\n  // renders either a log in or log out button depending on the state\n  renderAuthButton() {\n    if (this.props.isSignedIn) {\n      return (\n        <button\n          onClick={this.onSignOutClick}\n          className=\"btn btn-success\"\n        >\n          <FontAwesomeIcon icon={faSpotify} style={{ marginRight: \"5px\" }} />\n          Sign Out\n        </button>\n      )\n    } else {\n      return (\n        <button\n          onClick={this.onSignInClick}\n          className=\"btn btn-success\"\n        >\n          <FontAwesomeIcon icon={faSpotify} style={{ marginRight: \"5px\" }} />\n          Sign In\n        </button>\n      )\n    }\n  }\n\n  renderProfile() {\n    if (this.props.userData) {\n      return (\n        <div className=\"profile\" onClick={() => window.open(this.props.userData.profileURL)}>\n          <div className=\"icon\">\n            <FontAwesomeIcon icon={faUser} style={{ fontSize: '20px', lineHeight: '40px' }}/>\n          </div>\n          <span>{this.props.userData.username}</span>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <span className=\"d-inline-flex\">\n          {this.renderProfile()}\n          {this.renderAuthButton()}\n        </span>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    userData: state.auth.userData,\n    spotifyToken: state.auth.spotifyToken\n  }\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(SpotifyLogin);\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeadphones } from '@fortawesome/free-solid-svg-icons';\nimport SpotifyLogin from '../containers/spotifyLogin';\n\nconst Navbar = () => {\n  const renderInput = () => {\n    return (\n      <div className=\"container-fluid\">\n        <span className=\"d-inline-flex logo\">\n          <FontAwesomeIcon icon={faHeadphones} />\n          <h3 className=\"first-title\">Tune</h3><h3 className=\"second-title\">Sense</h3>\n        </span>\n        <SpotifyLogin />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"navbar\">\n      {renderInput()}\n    </div>\n  )\n}\n\nexport default Navbar;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeadphones } from '@fortawesome/free-solid-svg-icons';\n\nconst Banner = () => {\n  return (\n    <div className=\"banner row\">\n      <div className=\"col-6\">\n        <span className=\"d-inline-flex\">\n          <FontAwesomeIcon icon={faHeadphones} />\n          <h1 className=\"first-title\">Tune</h1><h1 className=\"second-title\">Sense</h1>\n        </span>\n        <p className=\"text-light\">Search for a song based on your mood to generate a playlist</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Banner;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst SongCard = (props) => {\n  const { song } = props;\n\n  const handleSubmit = (song) => {\n    props.onSubmit(song);\n  }\n\n  return (\n    <div className=\"card m-2 song-card\" onClick={() => handleSubmit(song)}>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{song.artist}</h5>\n        <p className=\"card-subtitle\">{song.title}</p>\n      </div>\n      <img src={song.image} alt=\"album cover\" className=\"song-image\" />\n      <span className=\"play\">\n        <FontAwesomeIcon icon={faPlayCircle} />\n      </span>\n    </div>\n  )\n}\n\nexport default SongCard;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport SongCard from '../components/songCard';\nimport { selectedSong } from '../actions';\n\nclass SongsGrid extends React.Component {\n  renderSongs() {\n    return this.props.songs.map((song) => {\n      return (\n        <SongCard song={song} key={song.id} onSubmit={this.onSubmit} />\n      )\n    })\n  }\n\n  onSubmit = (song) => {\n    this.props.selectedSong(song);\n  }\n\n  render() {\n    return (\n      <div className=\"col-xl-9 col-lg-6 col-md-12\">\n        <div className=\"d-flex flex-wrap justify-content-center mt-4\">\n          {this.renderSongs()}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return { songs: state.search.songs }\n}\n\nexport default connect(mapStateToProps, { selectedSong })(SongsGrid);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchAnalysis } from '../actions';\nimport { Radar } from 'react-chartjs-2';\n\nclass SongData extends React.Component {\n  onClick = () => {\n    this.props.fetchAnalysis(this.props.selectedSong.id);\n  }\n\n  renderData() {\n    const data = this.props.songData;\n    return Object.keys(data).map((song, index) => {\n      return (\n        <tr key={index}>\n          <th scope='row'>{song}</th>\n          <td className=\"text-right\">{(data[song]).toFixed(3)}</td>\n        </tr>\n      )\n    })\n  }\n\n  renderDataTable() {\n    const { songData } = this.props\n    if (!songData) {\n      return null;\n    }\n\n    return (\n      <div className=\"info-div\">\n        <p className=\"more-info text-muted m-0\">Detailed Info</p>\n        <div className=\"table-data table-responsive-md\">\n          <table className=\"table table-striped\">\n            <tbody>\n              {this.renderData()}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n\n  // componentDidMount() {\n  //   {this.renderDataTable()}\n  // }\n\n  renderGraph() {\n    const { songData } = this.props\n    if (!songData) {\n      return null;\n    }\n\n    const data = {\n      labels: ['acousticness', 'danceability', 'energy', 'liveness', 'speechiness', 'valence'],\n      datasets: [\n        {\n          label: 'Analysis',\n          data: [\n            songData.acousticness,\n            songData.danceability,\n            songData.energy,\n            songData.liveness,\n            songData.speechiness,\n            songData.valence\n          ],\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          borderColor: 'rgba(255, 99, 132, 1)',\n          borderWidth: 1.5\n        }\n      ]\n    };\n\n    const options = {\n      scale: {\n        ticks: { beginAtZero: true }\n      }\n    }\n\n    return (\n      <div className=\"graph\">\n        <Radar data={data} options={options} />\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <button\n          className=\"btn btn-success song-analysis\"\n          onClick={() => this.onClick()}\n        >\n          Get Song Analysis\n        </button>\n        {this.renderGraph()}\n        {this.renderDataTable()}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    songData: state.selectedSongInfo.songData,\n    selectedSong: state.selectedSongInfo.selectedSong\n  };\n}\n\nexport default connect(mapStateToProps, { fetchAnalysis })(SongData);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\n// import Speaker from '../components/Speaker';\nimport SongData from './songData';\n\nclass SelectedSong extends React.Component {\n  render() {\n    const { selectedSong } = this.props;\n\n    let iframeClass = selectedSong === null ? 'd-none' : \"\";\n    if (!selectedSong) {\n      return null;\n    }\n\n    return (\n      <div className=\"col-xl-3 col-lg-6 col-md-12 align-self-start mt-4 d-flex flex-column\">\n        <div className={`d-flex selected-song justify-content-center mt-2 ${iframeClass}`}>\n          <iframe\n            title=\"player\"\n            src={`https://open.spotify.com/embed/track/${selectedSong.id}`}\n            frameBorder=\"0\"\n            width=\"300\" height=\"380\"\n            allowtransparency=\"true\"\n            allow=\"encrypted-media\"\n          >\n          </iframe>\n        </div>\n        {/* {this.props.selectedSong &&\n        <Speaker selectedSong={this.props.selectedSong} />} */}\n        {iframeClass !== 'd-none' && <SongData />}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return { selectedSong: state.selectedSongInfo.selectedSong }\n}\n\nexport default connect(mapStateToProps, {})(SelectedSong);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport SearchBar from '../containers/searchBar';\nimport Navbar from './navbar';\nimport Banner from './banner';\nimport SongsGrid from '../containers/songsGrid';\nimport SelectedSong from '../containers/selectedSong';\n// import CreatePlaylist from '../containers/CreatePlaylist';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar />\n        <div className=\"container\">\n          {!this.props.search.songs.length > 0 &&\n          <Banner />}\n          {this.props.auth.isSignedIn &&\n          <>\n            <SearchBar />\n            {/* <CreatePlaylist /> */}\n          </>}\n          {/* button to add playlist to spotify account */}\n          <div className=\"row justify-content-center\">\n            {/* Selected Song Player && Tempo Animation ?? */}\n            {this.props.search.songs &&\n            <>\n              <SelectedSong />\n              <SongsGrid />\n            </>}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    search: state.search,\n    selectedSong: state.selectedSong\n  }\n}\n\nexport default connect(mapStateToProps, {})(App);\n","import { GET_DATA, SIGN_IN, SIGN_OUT } from '../actions/index';\n\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  spotifyToken: null,\n  userData: null\n}\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return { ...state, isSignedIn: true, spotifyToken: action.payload };\n    case SIGN_OUT:\n      return { ...state, isSignedIn: false, spotifyToken: null, userData: null };\n    case GET_DATA:\n      return { ...state, userData: action.payload }\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;\n","import { SEARCH, SEARCH_TERM } from \"../actions\";\n\nconst INITIAL_STATE = {\n  songs: [],\n  searchTerm: \"\"\n}\n\nconst searchReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SEARCH_TERM:\n      return { ...state, searchTerm: action.payload };\n    case SEARCH:\n      return { ...state, songs: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default searchReducer;\n","import { FETCH_ANALYSIS, SELECTED_SONG } from \"../actions\";\n\nconst INITIAL_STATE = {\n  selectedSong: null,\n  songData: null\n}\n\nconst selectedSongReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SELECTED_SONG:\n      return { ...state, selectedSong: action.payload, songData: null };\n    case FETCH_ANALYSIS:\n      return { ...state, songData: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default selectedSongReducer;\n","import { CREATE_PLAYLIST } from \"../actions\";\n\nconst INITIAL_STATE = {\n  playListInfo: {}\n}\n\nconst createPlaylistReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CREATE_PLAYLIST:\n      return { ...state, playListInfo: action.payload};\n    default:\n      return state;\n  }\n}\n\nexport default createPlaylistReducer;\n","import { combineReducers } from \"redux\";\nimport authReducer from './authReducer';\nimport searchReducer from './searchReducer';\nimport selectedSongReducer from \"./selectedSongReducer\";\nimport createPlaylistReducer from './createPlaylistReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  search: searchReducer,\n  selectedSongInfo: selectedSongReducer,\n  createPlaylist: createPlaylistReducer\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/app';\nimport reducers from './reducers';\nimport './index.css';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}